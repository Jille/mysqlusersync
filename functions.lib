<?php
	require('privileges.lib');
	require('user.lib');
	if(!class_exists('MySQLi')) {
		require('fake_mysqli.lib');
	}

	foreach(UserPrivileges::ls() as $priv) {
		define('PRIV_'. strtoupper($priv), $priv);
	}

	function mus_connect($host, $user, $pass) {
		$connection = new MySQLi($host, $user, $pass);
		if($connection->connect_error) {
			throw new MUSException('Connection to '. $host .' failed: '. $connection->connect_error);
		}
		return $connection;
	}

	function mus_getPrivilegesFromMySQL($connection) {
		$users = array();
		$res = $connection->query("SELECT * FROM mysql.user");
		while($row = $res->fetch_assoc()) {
			$users[$row['User']][$row['Host']] = User::createFromMySQLRecord($row);
		}

		$res = $connection->query("SELECT * FROM mysql.db");
		while($row = $res->fetch_assoc()) {
			if(!isset($users[$row['User']][$row['Host']])) {
				throw new MUSException('User '. $row['User'] .'@'. $row['Host'] .' has grants for '. $row['Db'] .'.* but has no user-record.');
				# $users[$row['User']][$row['Host']] = new User($row['User'], array($row['Host']), '');
			}
			$users[$row['User']][$row['Host']]->addDBPrivilegesFromMySQLRecord($row);
		}

		// XXX Add table en column specific privileges

		return $users;
	}

	function asphp($str) {
		if(is_array($str) && $str == array_values($str)) {
			return 'array('. implode(', ', array_map('asphp', $str)) .')';
		}
		return var_export($str, true);
	}


	class MUSException extends Exception {
	}
?>
